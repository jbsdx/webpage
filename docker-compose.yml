version: "3.3"
services:
  reverse-proxy:
    image: traefik:v2.1
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      #- "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      #- "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      #- "--certificatesresolvers.myresolver.acme.email=dev@mydomain.com"
      #- "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    environment:
      TRAEFIK_LOG: "true"
      TRAEFIK_LOG_FILEPATH: /etc/traefik/traefik.log
      TRAEFIK_LOG_LEVEL: "ERROR"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./volumes/proxy/log/traefik.log:/etc/traefik/traefik.log:rw
      - ./volumes/proxy/letsencrypt:/letsencrypt

  api:
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        env: local
    environment:
      SEED_DATABASE: enabled
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
    labels:
      - traefik.http.routers.api.rule=(Host(`localhost`) && Path(`/api`) || Host(`api.localhost`))
      #- traefik.http.routers.api.tls=true
      #- traefik.http.routers.api.tls.certresolver=myresolver
      - traefik.http.routers.api.entrypoints=web
      - traefik.http.services.api-svc.loadbalancer.server.port=3000
      - traefik.enable=true
    depends_on:
      - redis
      - mongodb
    links:
      - redis
      - mongodb

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        env: local
    labels:
      - traefik.http.routers.frontend.rule=Host(`localhost`)
      #- traefik.http.routers.frontend.tls=true
      #- traefik.http.routers.frontend.tls.certresolver=myresolver
      - traefik.http.routers.frontend.entrypoints=web
      - traefik.http.services.frontend-svc.loadbalancer.server.port=3000
      - traefik.enable=true

  redis:
    image: redis
    volumes:
      - ./volumes/redis:/data
    command: redis-server --requirepass dk3Jd83jgd8dj48dAb --appendonly yes
    ports:
      - "6380:6379"

  mongodb:
    image: mongo
    volumes:
      - ./volumes/mongo:/data/db
      - ./api/src/migrations/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin-user
      MONGO_INITDB_ROOT_PASSWORD: dk48d1JdkvnDK38zjnDK1jvkla
      MONGO_INITDB_DATABASE: admin
    ports:
      - "27018:27017"
